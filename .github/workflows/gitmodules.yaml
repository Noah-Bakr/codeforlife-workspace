name: Git Modules

on:
  push:
    branches: [main]
    paths:
      - .gitmodules
      - .github/workflows/gitmodules.yaml
  schedule:
    - cron: "0 */3 * * *" # Every 3rd hour
  workflow_call:
    secrets:
      CFL_BOT_GH_TOKEN:
        description: "The CFL-bot's GitHub token. Used to sync."
        required: true
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-22.04
    steps:
      - name: ðŸ›« Checkout Workspace
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CFL_BOT_GH_TOKEN }}
          repository: ocadotechnology/codeforlife-workspace
          submodules: ${{ github.event_name != 'workflow_call' }}

      - name: ðŸ›« Sync Submodules
        run: |
          submodule_paths="$(
            git config \
              --file .gitmodules \
              --get-regexp path | \
            awk '{ print $2 }'
          )"

          if [ -z "$submodule_paths" ]; then
            echo "No submodules found in .gitmodules."
            exit 1
          fi

          exit_code=0
          remote="origin"
          for submodule_path in $submodule_paths; do
            echo "Processing submodule: $submodule_path"

            # Navigate into the submodule directory.
            if [ ! -d "$submodule_path" ]; then
              echo "Submodule path '$submodule_path' not found."
              exit_code=1
              continue
            fi
            pushd "$submodule_path" > /dev/null

            function continue_on_error() {
              echo "$1"
              exit_code=1
              popd > /dev/null
              continue
            }

            echo "Getting default branch from remote '$remote'."
            default_branch=$(
              git remote show $remote 2>/dev/null | \
              grep 'HEAD branch' | \
              awk '{print $NF}'
            )
            if [ -z "$default_branch" ]; then
              continue_on_error "Default branch not found."
            fi

            echo "Checking out $default_branch..."
            git checkout "$default_branch" || \
              continue_on_error "Failed to checkout branch '$default_branch'."

            echo "Pulling latest changes from $default_branch..."
            git pull $remote "$default_branch" || \
              continue_on_error "Failed to pull latest changes for $default_branch."

            popd > /dev/null

            echo "-------------------------------------------------------------"
          done

          exit $exit_code
